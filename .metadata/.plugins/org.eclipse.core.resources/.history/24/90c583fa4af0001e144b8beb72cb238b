package com.stl.app.restApi.model;

import jakarta.persistence.AttributeOverride;
import jakarta.persistence.AttributeOverrides;
import jakarta.persistence.Column;
import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

@Entity
public class User 
{
	@Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String firstName;
    private String lastName;
    private String occupation;
    private int age;

    @Embedded
    @AttributeOverrides({
            @AttributeOverride(name = "houseNumber", column = @Column(name = "permanent_house_number")),
            @AttributeOverride(name = "road", column = @Column(name = "permanent_road")),
            @AttributeOverride(name = "city", column = @Column(name = "permanent_city")),
            @AttributeOverride(name = "state", column = @Column(name = "permanent_state")),
            @AttributeOverride(name = "pincode", column = @Column(name = "permanent_pincode"))
    })
    private Address permanentAddress;

    @Embedded
    @AttributeOverrides({
            @AttributeOverride(name = "houseNumber", column = @Column(name = "current_house_number")),
            @AttributeOverride(name = "road", column = @Column(name = "current_road")),
            @AttributeOverride(name = "city", column = @Column(name = "current_city")),
            @AttributeOverride(name = "state", column = @Column(name = "current_state")),
            @AttributeOverride(name = "pincode", column = @Column(name = "current_pincode"))
    })
    
    
    private Address currentAddress;
    
    
    
//    public User() {
//        // Initialize the permanentAddress field
//        this.permanentAddress = new Address();
//        this.permanentAddress.setHouseNumber(123);
//        this.permanentAddress.setRoad("Main Street");
//        // Set other address properties as needed
//        
//        // Alternatively, you can initialize the currentAddress field in a similar way
//        // this.currentAddress = new Address();
//        // this.currentAddress.setHouseNumber(...);
//        // this.currentAddress.setRoad(...);
//        // Set other address properties as needed
//    }
    
//    public User createUserWithAddress() {
//        User user = new User();
//        Address permanentAddress = new Address();
//        permanentAddress.setHouseNumber(123);
//        permanentAddress.setRoad("Main Street");
//        permanentAddress.setCity("Your City");
//        permanentAddress.setState("Your State");
//        permanentAddress.setPincode(560018);
//        user.setPermanentAddress(permanentAddress);
//        
//        // Additional user properties can be set here if needed
//        user.setFirstName("John");
//        user.setLastName("Doe");
//        user.setOccupation("Engineer");
//        user.setAge(30);
//        
//        return userRepository.save(user);
//    }


	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getOccupation() {
		return occupation;
	}

	public void setOccupation(String occupation) {
		this.occupation = occupation;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public Address getPermanentAddress() {
		return permanentAddress;
	}

	public void setPermanentAddress(Address permanentAddress) {
		this.permanentAddress = permanentAddress;
	}

	public Address getCurrentAddress() {
		return currentAddress;
	}

	public void setCurrentAddress(Address currentAddress) {
		this.currentAddress = currentAddress;
	}

    // Getters and setters
    
}


