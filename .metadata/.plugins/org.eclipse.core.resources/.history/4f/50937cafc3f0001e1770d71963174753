package com.stl.app.restApi.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.stl.app.restApi.Service.UserService;
import com.stl.app.restApi.model.User;
import com.stl.app.restApi.repo.UserRepo;

@RestController
@RequestMapping("/users")
public class ApiControllers 
{
//	 @Autowired
//	    private UserService userService;
	 
	@Autowired
	private UserRepo userRepo;
	
//	@GetMapping
//    public List<User> getAllUsers() {
//        return userService.getAllUsers();
//    }
//	@PostMapping
//    public ResponseEntity<User> createUser(@RequestBody User userRequest) {
//        try {
//            User newUser = userService.createUser(userRequest);
//            return new ResponseEntity<>(newUser, HttpStatus.CREATED);
//        } catch (Exception e) {
//            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
//        }
//    }
	
	@GetMapping(value = "/")
	public String getPage()
	{
		return "Welcome to the Page";
	}
	
	@GetMapping(value = "/users")
	public List<User> getUsers()
	{
		return userRepo.findAll();
	}
	
	@PostMapping(value = "/add")
	public User saveUser(@RequestBody User user)
	{
		return userRepo.save(user);
		//return "Saved....";
	}
	
//	@PutMapping(value = "update/{id}")
//	public String updateUser(@PathVariable long id, @RequestBody User user)
//	{
//		User updatedUser = userRepo.findById(id).get();
//		updatedUser.setFirstName(user.getFirstName());
//		updatedUser.setLastName(user.getLastName());
//		updatedUser.setOccupation(user.getOccupation());
//		updatedUser.setAge(user.getAge());
//		//userRepo.
//		userRepo.save(user);
//		return "Updated......";
//	}
	
	@DeleteMapping(value = "delete/{id}")
	public String deleteUser(@PathVariable long id)
	{
		User deleteUser = userRepo.findById(id).get();
		userRepo.delete(deleteUser);
		return "Delete the user with id: "+id;
	}
	}
